{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Poetry PyCharm Plugin \ud83d\udd17 A JetBrains PyCharm plugin for poetry . Demo \ud83d\udd17 Quick Installation \ud83d\udd17 The plugin is in JetBrains repository ( Poetry Plugin Page ) You can install the stable version on PyCharm's Marketplace (Preference -> Plugins -> Marketplace) Official Document I recommend PyCharm 2020.3 and the plugin version 1.0 or later to get all features and performance. Features \ud83d\udd17 Implemented \ud83d\udd17 add a new/existing poetry environment as a interpreter install packages with pyproject.toml when add a interpreter add a new pyproject.toml when it does not exists install and import a package with poetry (QuickFix) install packages from poetry.lock update and lock with a popup show a message and a link to fix settings (QuickFix) install extras and run scripts by clicking a line marker ( Toml plugin is required) show a message for outdated version packages ( Toml plugin is required) install/uninstall packages from GUI detect poetry project when open new project Motivation \ud83d\udd17 Poetry is a popular package manager of python. However, PyCharm doesn't support poetry. This plugin support poetry. This source code was forked from the Pipenv integration code in IntelliJ-community. In this issue PY-30702 , the feature is discussing. But, We need time to get the proper functionality in PyCharm. The plugin has useful features like installing from poetry.lock.(you can watch demo video) However, The feature is limited. PyCharm has to provided extension points for perfect features. I guess if the plugin be used a lot of people, then JetBrains developers will implement extension points or poetry integration in PyCharm. This project is currently in an experimental phase \ud83d\udd17 ~~This plugin supports minimum features to use poetry in PyCharm.~~ ~~There is feature restrictions .~~ ~~But, PyCharm team will add a few api to resolve the problem. The detail is in this issue .~~ PyCharm provides APIs that are for third-party package manager plugins. The project needs any feedback and PRs. We're waiting for your feedback and PRs. Feature Restrictions \ud83d\udd17 The plugin can't provide some features for technical reasons. Because PyCharm has not provided APIs to support third-party python package managers yet. (a.k.a extension points ) We will be able to implement the following features when JetBrains add extension points to PyCharms. ~~Create a new environment when creating a new project.~~ Use the Custom Icon for poetry. (Coming Soon) ~~Install/uninstall a package from GUI(settings)~~ And more. Screen Shots \ud83d\udd17 Contribute \ud83d\udd17 We are waiting for your contributions to poetry-pycharm-plugin . Links \ud83d\udd17 A JetBrains PyCharm plugin for pydantic . I got interviewed about creating a plugin for JetBrains' PyCharm Blog .","title":"Overview"},{"location":"#poetry-pycharm-plugin","text":"A JetBrains PyCharm plugin for poetry .","title":"Poetry PyCharm Plugin"},{"location":"#demo","text":"","title":"Demo"},{"location":"#quick-installation","text":"The plugin is in JetBrains repository ( Poetry Plugin Page ) You can install the stable version on PyCharm's Marketplace (Preference -> Plugins -> Marketplace) Official Document I recommend PyCharm 2020.3 and the plugin version 1.0 or later to get all features and performance.","title":"Quick Installation"},{"location":"#features","text":"","title":"Features"},{"location":"#implemented","text":"add a new/existing poetry environment as a interpreter install packages with pyproject.toml when add a interpreter add a new pyproject.toml when it does not exists install and import a package with poetry (QuickFix) install packages from poetry.lock update and lock with a popup show a message and a link to fix settings (QuickFix) install extras and run scripts by clicking a line marker ( Toml plugin is required) show a message for outdated version packages ( Toml plugin is required) install/uninstall packages from GUI detect poetry project when open new project","title":"Implemented"},{"location":"#motivation","text":"Poetry is a popular package manager of python. However, PyCharm doesn't support poetry. This plugin support poetry. This source code was forked from the Pipenv integration code in IntelliJ-community. In this issue PY-30702 , the feature is discussing. But, We need time to get the proper functionality in PyCharm. The plugin has useful features like installing from poetry.lock.(you can watch demo video) However, The feature is limited. PyCharm has to provided extension points for perfect features. I guess if the plugin be used a lot of people, then JetBrains developers will implement extension points or poetry integration in PyCharm.","title":"Motivation"},{"location":"#this-project-is-currently-in-an-experimental-phase","text":"~~This plugin supports minimum features to use poetry in PyCharm.~~ ~~There is feature restrictions .~~ ~~But, PyCharm team will add a few api to resolve the problem. The detail is in this issue .~~ PyCharm provides APIs that are for third-party package manager plugins. The project needs any feedback and PRs. We're waiting for your feedback and PRs.","title":"This project is currently in an experimental phase"},{"location":"#feature-restrictions","text":"The plugin can't provide some features for technical reasons. Because PyCharm has not provided APIs to support third-party python package managers yet. (a.k.a extension points ) We will be able to implement the following features when JetBrains add extension points to PyCharms. ~~Create a new environment when creating a new project.~~ Use the Custom Icon for poetry. (Coming Soon) ~~Install/uninstall a package from GUI(settings)~~ And more.","title":"Feature Restrictions"},{"location":"#screen-shots","text":"","title":"Screen Shots"},{"location":"#contribute","text":"We are waiting for your contributions to poetry-pycharm-plugin .","title":"Contribute"},{"location":"#links","text":"A JetBrains PyCharm plugin for pydantic . I got interviewed about creating a plugin for JetBrains' PyCharm Blog .","title":"Links"},{"location":"changelog/","text":"1.1.5-212 \ud83d\udd17 Bug fixes \ud83d\udd17 Fix toml header problem [ #271 ] Features \ud83d\udd17 Update versions [ #270 ] 1.1.4-212 \ud83d\udd17 Features \ud83d\udd17 Support PyCharm EAP 212.* [ #240 ] 1.1.4 \ud83d\udd17 Bug fixes \ud83d\udd17 Update an error dialog to the same as the dialog of pipenv [ #224 ] 1.1.3 \ud83d\udd17 Bug fixes \ud83d\udd17 [ #215 , #217 ] by @roxchkplusony 1.1.2 \ud83d\udd17 Bug fixes \ud83d\udd17 Improve responsiveness of the Poetry add new venv panel [ #214 ] by @roxchkplusony 1.1.1 \ud83d\udd17 Bug fixes \ud83d\udd17 Remove checking poetry executable [ #203 ] 1.1.0 \ud83d\udd17 Features \ud83d\udd17 Support PyCharm EAP 211.* [ #181 ] 1.0.7 \ud83d\udd17 Bug fixes \ud83d\udd17 Fix replaced Python restricted dependencies [ #184 ] 1.0.6 \ud83d\udd17 Bug fixes \ud83d\udd17 Change command timeout to 30 sec [ #177 ] Fix broken dependency on Toml plugin [ #176 ] 1.0.5 \ud83d\udd17 Bug fixes \ud83d\udd17 Support Toml plugin version 0.2.139.3615-203 or earlier version [ #174 ] 1.0.4 \ud83d\udd17 Bug fixes \ud83d\udd17 Support Toml plugin version 0.2.140.3644-202 [ #169 ] 1.0.3 \ud83d\udd17 Features \ud83d\udd17 Add validation for poetry executable [ #165 ] 1.0.2 \ud83d\udd17 Features \ud83d\udd17 Support poetry lock with \"--no-update\" [ #161 ] 1.0.1 \ud83d\udd17 Bug fixes \ud83d\udd17 Remove configuration collector [ #150 ] by @sproshev Apply changes in python bundles in 2020.3 [ #149 ] by @sproshev 1.0.0 \ud83d\udd17 Features \ud83d\udd17 Remove deprecated APIs [ #148 ] Support PyCharm 2020.3 [ #147 ] 0.5.5 \ud83d\udd17 Bug fixes \ud83d\udd17 Fix compatibility problems for IntelliJ IDEA Ultimate IU-203.4818.26 [ #130 ] 0.5.4 \ud83d\udd17 Bug fixes \ud83d\udd17 Fix wrong warning for installed packages [ #128 ] Fix wrong icon for system interpreter [ #127 ] 0.5.3 \ud83d\udd17 Bug fixes \ud83d\udd17 Fix invalid build target version for IntelliJ [ #119 ] 0.5.2 \ud83d\udd17 Bug fixes \ud83d\udd17 Fix broken inspection config [ #116 ] 0.5.1 \ud83d\udd17 Features \ud83d\udd17 Change max target version to 2020.3 [ #112 ] 0.5.0 \ud83d\udd17 Features \ud83d\udd17 Support 2020.2.2 [ #104 ] 0.1.3 \ud83d\udd17 Features \ud83d\udd17 Support running scripts with RunConfiguration [ #100 ] Improve build config [ #96 ] 0.1.2 \ud83d\udd17 Features \ud83d\udd17 Add a version inspection [ #85 ] 0.1.1 \ud83d\udd17 Features \ud83d\udd17 Support script [ #81 ] 0.1.0 \ud83d\udd17 Features \ud83d\udd17 Add python version for environment name [ #77 ] 0.0.13 \ud83d\udd17 Bug fixes \ud83d\udd17 Fix invalid notification to install packages [ #62 ] 0.0.12 \ud83d\udd17 Bug fixes \ud83d\udd17 - Create new windows interpreter [ #53 ] by @akinnear \ud83d\udd17 Thanks to @akinnear 0.0.11 \ud83d\udd17 Features \ud83d\udd17 Support adding existing env [ #48 ] Improvements \ud83d\udd17 Improve supporting windows [ #51 ] Bug fixes \ud83d\udd17 fix detecting poetry envs [ #50 ] 0.0.10 \ud83d\udd17 Features \ud83d\udd17 Support adding packages with a quick fix [ #44 ] 0.0.9 \ud83d\udd17 Features \ud83d\udd17 Add unittest [ #41 ] Bug fixes \ud83d\udd17 Fix an error not found toml plugin [ #42 ] 0.0.8 \ud83d\udd17 Features \ud83d\udd17 improve detecting extras [ #39 ] improve showing popup [ #38 ] improve handling invalid interpreter [ #37 ] Bug fixes \ud83d\udd17 Remove a invalid content in Open Project menu [ #35 ] 0.0.7 \ud83d\udd17 Features \ud83d\udd17 Improve handling sdk [ #32 ] Support installing extras [ #31 ] Update jvm version [ #26 ] 0.0.6 \ud83d\udd17 Bug fixes \ud83d\udd17 fix project already disposed error [ #21 ] 0.0.5 \ud83d\udd17 Features \ud83d\udd17 update documents [ #20 ] 0.0.4 \ud83d\udd17 Features \ud83d\udd17 support creating new pyproject.toml [ #17 ] check pyproject.toml [ #16 ] 0.0.3 \ud83d\udd17 Features \ud83d\udd17 add installing from poetry.lock [ #10 ] Bug fixes \ud83d\udd17 disable custom icon [ #11 ] 0.0.2 \ud83d\udd17 Features \ud83d\udd17 add quick fix [ #9 ] 0.0.1 \ud83d\udd17 Features \ud83d\udd17 Support update and lock [ #3 ] Support poetry [ #2 ]","title":"Changelog"},{"location":"changelog/#115-212","text":"","title":"1.1.5-212"},{"location":"changelog/#bug-fixes","text":"Fix toml header problem [ #271 ]","title":"Bug fixes"},{"location":"changelog/#features","text":"Update versions [ #270 ]","title":"Features"},{"location":"changelog/#114-212","text":"","title":"1.1.4-212"},{"location":"changelog/#features_1","text":"Support PyCharm EAP 212.* [ #240 ]","title":"Features"},{"location":"changelog/#114","text":"","title":"1.1.4"},{"location":"changelog/#bug-fixes_1","text":"Update an error dialog to the same as the dialog of pipenv [ #224 ]","title":"Bug fixes"},{"location":"changelog/#113","text":"","title":"1.1.3"},{"location":"changelog/#bug-fixes_2","text":"[ #215 , #217 ] by @roxchkplusony","title":"Bug fixes"},{"location":"changelog/#112","text":"","title":"1.1.2"},{"location":"changelog/#bug-fixes_3","text":"Improve responsiveness of the Poetry add new venv panel [ #214 ] by @roxchkplusony","title":"Bug fixes"},{"location":"changelog/#111","text":"","title":"1.1.1"},{"location":"changelog/#bug-fixes_4","text":"Remove checking poetry executable [ #203 ]","title":"Bug fixes"},{"location":"changelog/#110","text":"","title":"1.1.0"},{"location":"changelog/#features_2","text":"Support PyCharm EAP 211.* [ #181 ]","title":"Features"},{"location":"changelog/#107","text":"","title":"1.0.7"},{"location":"changelog/#bug-fixes_5","text":"Fix replaced Python restricted dependencies [ #184 ]","title":"Bug fixes"},{"location":"changelog/#106","text":"","title":"1.0.6"},{"location":"changelog/#bug-fixes_6","text":"Change command timeout to 30 sec [ #177 ] Fix broken dependency on Toml plugin [ #176 ]","title":"Bug fixes"},{"location":"changelog/#105","text":"","title":"1.0.5"},{"location":"changelog/#bug-fixes_7","text":"Support Toml plugin version 0.2.139.3615-203 or earlier version [ #174 ]","title":"Bug fixes"},{"location":"changelog/#104","text":"","title":"1.0.4"},{"location":"changelog/#bug-fixes_8","text":"Support Toml plugin version 0.2.140.3644-202 [ #169 ]","title":"Bug fixes"},{"location":"changelog/#103","text":"","title":"1.0.3"},{"location":"changelog/#features_3","text":"Add validation for poetry executable [ #165 ]","title":"Features"},{"location":"changelog/#102","text":"","title":"1.0.2"},{"location":"changelog/#features_4","text":"Support poetry lock with \"--no-update\" [ #161 ]","title":"Features"},{"location":"changelog/#101","text":"","title":"1.0.1"},{"location":"changelog/#bug-fixes_9","text":"Remove configuration collector [ #150 ] by @sproshev Apply changes in python bundles in 2020.3 [ #149 ] by @sproshev","title":"Bug fixes"},{"location":"changelog/#100","text":"","title":"1.0.0"},{"location":"changelog/#features_5","text":"Remove deprecated APIs [ #148 ] Support PyCharm 2020.3 [ #147 ]","title":"Features"},{"location":"changelog/#055","text":"","title":"0.5.5"},{"location":"changelog/#bug-fixes_10","text":"Fix compatibility problems for IntelliJ IDEA Ultimate IU-203.4818.26 [ #130 ]","title":"Bug fixes"},{"location":"changelog/#054","text":"","title":"0.5.4"},{"location":"changelog/#bug-fixes_11","text":"Fix wrong warning for installed packages [ #128 ] Fix wrong icon for system interpreter [ #127 ]","title":"Bug fixes"},{"location":"changelog/#053","text":"","title":"0.5.3"},{"location":"changelog/#bug-fixes_12","text":"Fix invalid build target version for IntelliJ [ #119 ]","title":"Bug fixes"},{"location":"changelog/#052","text":"","title":"0.5.2"},{"location":"changelog/#bug-fixes_13","text":"Fix broken inspection config [ #116 ]","title":"Bug fixes"},{"location":"changelog/#051","text":"","title":"0.5.1"},{"location":"changelog/#features_6","text":"Change max target version to 2020.3 [ #112 ]","title":"Features"},{"location":"changelog/#050","text":"","title":"0.5.0"},{"location":"changelog/#features_7","text":"Support 2020.2.2 [ #104 ]","title":"Features"},{"location":"changelog/#013","text":"","title":"0.1.3"},{"location":"changelog/#features_8","text":"Support running scripts with RunConfiguration [ #100 ] Improve build config [ #96 ]","title":"Features"},{"location":"changelog/#012","text":"","title":"0.1.2"},{"location":"changelog/#features_9","text":"Add a version inspection [ #85 ]","title":"Features"},{"location":"changelog/#011","text":"","title":"0.1.1"},{"location":"changelog/#features_10","text":"Support script [ #81 ]","title":"Features"},{"location":"changelog/#010","text":"","title":"0.1.0"},{"location":"changelog/#features_11","text":"Add python version for environment name [ #77 ]","title":"Features"},{"location":"changelog/#0013","text":"","title":"0.0.13"},{"location":"changelog/#bug-fixes_14","text":"Fix invalid notification to install packages [ #62 ]","title":"Bug fixes"},{"location":"changelog/#0012","text":"","title":"0.0.12"},{"location":"changelog/#bug-fixes_15","text":"","title":"Bug fixes"},{"location":"changelog/#-create-new-windows-interpreter-53-by-akinnear","text":"Thanks to @akinnear","title":"- Create new windows interpreter [#53] by @akinnear"},{"location":"changelog/#0011","text":"","title":"0.0.11"},{"location":"changelog/#features_12","text":"Support adding existing env [ #48 ]","title":"Features"},{"location":"changelog/#improvements","text":"Improve supporting windows [ #51 ]","title":"Improvements"},{"location":"changelog/#bug-fixes_16","text":"fix detecting poetry envs [ #50 ]","title":"Bug fixes"},{"location":"changelog/#0010","text":"","title":"0.0.10"},{"location":"changelog/#features_13","text":"Support adding packages with a quick fix [ #44 ]","title":"Features"},{"location":"changelog/#009","text":"","title":"0.0.9"},{"location":"changelog/#features_14","text":"Add unittest [ #41 ]","title":"Features"},{"location":"changelog/#bug-fixes_17","text":"Fix an error not found toml plugin [ #42 ]","title":"Bug fixes"},{"location":"changelog/#008","text":"","title":"0.0.8"},{"location":"changelog/#features_15","text":"improve detecting extras [ #39 ] improve showing popup [ #38 ] improve handling invalid interpreter [ #37 ]","title":"Features"},{"location":"changelog/#bug-fixes_18","text":"Remove a invalid content in Open Project menu [ #35 ]","title":"Bug fixes"},{"location":"changelog/#007","text":"","title":"0.0.7"},{"location":"changelog/#features_16","text":"Improve handling sdk [ #32 ] Support installing extras [ #31 ] Update jvm version [ #26 ]","title":"Features"},{"location":"changelog/#006","text":"","title":"0.0.6"},{"location":"changelog/#bug-fixes_19","text":"fix project already disposed error [ #21 ]","title":"Bug fixes"},{"location":"changelog/#005","text":"","title":"0.0.5"},{"location":"changelog/#features_17","text":"update documents [ #20 ]","title":"Features"},{"location":"changelog/#004","text":"","title":"0.0.4"},{"location":"changelog/#features_18","text":"support creating new pyproject.toml [ #17 ] check pyproject.toml [ #16 ]","title":"Features"},{"location":"changelog/#003","text":"","title":"0.0.3"},{"location":"changelog/#features_19","text":"add installing from poetry.lock [ #10 ]","title":"Features"},{"location":"changelog/#bug-fixes_20","text":"disable custom icon [ #11 ]","title":"Bug fixes"},{"location":"changelog/#002","text":"","title":"0.0.2"},{"location":"changelog/#features_20","text":"add quick fix [ #9 ]","title":"Features"},{"location":"changelog/#001","text":"","title":"0.0.1"},{"location":"changelog/#features_21","text":"Support update and lock [ #3 ] Support poetry [ #2 ]","title":"Features"},{"location":"changelog_latest/","text":"Bug fixes \ud83d\udd17 Fix toml header problem [ #271 ] Features \ud83d\udd17 Update versions [ #270 ]","title":"Changelog latest"},{"location":"changelog_latest/#bug-fixes","text":"Fix toml header problem [ #271 ]","title":"Bug fixes"},{"location":"changelog_latest/#features","text":"Update versions [ #270 ]","title":"Features"},{"location":"development/","text":"Development \ud83d\udd17 Building the plugin \ud83d\udd17 You can build and run the plugin either via the command line or through IntelliJ IDEA: Shell on Linux or MacOS \ud83d\udd17 $ ./gradlew buildPlugin Command Prompt on Windows \ud83d\udd17 $ gradlew.bat buildPlugin JetBrains IDE on any platform \ud83d\udd17 Official documentation Running the IDE with the built plugin \ud83d\udd17 $ ./gradlew runIde Unittest \ud83d\udd17 You should add a unittest for the new code. But, This plugin do complex behavior to modules. You may feel writing unittest difficult. We should write a unittest as much as possible. Unittest is not blocker for PRs. License For JetBrains' Code \ud83d\udd17 These files are forked from IntelliJ IDEA Community Edition The files are licensed under the Apache License, Version 2.0. http://www.apache.org/licenses/LICENSE-2.0","title":"Development"},{"location":"development/#development","text":"","title":"Development"},{"location":"development/#building-the-plugin","text":"You can build and run the plugin either via the command line or through IntelliJ IDEA:","title":"Building the plugin"},{"location":"development/#shell-on-linux-or-macos","text":"$ ./gradlew buildPlugin","title":"Shell on Linux or MacOS"},{"location":"development/#command-prompt-on-windows","text":"$ gradlew.bat buildPlugin","title":"Command Prompt on Windows"},{"location":"development/#jetbrains-ide-on-any-platform","text":"Official documentation","title":"JetBrains IDE on any platform"},{"location":"development/#running-the-ide-with-the-built-plugin","text":"$ ./gradlew runIde","title":"Running the IDE with the built plugin"},{"location":"development/#unittest","text":"You should add a unittest for the new code. But, This plugin do complex behavior to modules. You may feel writing unittest difficult. We should write a unittest as much as possible. Unittest is not blocker for PRs.","title":"Unittest"},{"location":"development/#license-for-jetbrains-code","text":"These files are forked from IntelliJ IDEA Community Edition The files are licensed under the Apache License, Version 2.0. http://www.apache.org/licenses/LICENSE-2.0","title":"License For JetBrains' Code"},{"location":"install/","text":"Installation \ud83d\udd17 The plugin requires PyCharm 2020.3 or later (include other JetBrains IDEs) MarketPlace \ud83d\udd17 The plugin is in JetBrains repository ( Poetry Plugin Page ) You can install the stable version on PyCharm's Marketplace (Preference -> Plugins -> Marketplace) Official Document Complied binary \ud83d\udd17 The releases section of this repository contains a compiled version of the plugin: poetry-pycharm-plugin.zip(latest) After downloading this file, you can install the plugin from disk by following the JetBrains instructions here . Source \ud83d\udd17 Alternatively, you can clone this repository and follow the instructions under the \"Building the plugin\" heading below to build from source. The build process will create the file build/distributions/poetry-pycharm-plugin.zip . This file can be installed as a PyCharm plugin from disk following the same instructions.","title":"Install"},{"location":"install/#installation","text":"The plugin requires PyCharm 2020.3 or later (include other JetBrains IDEs)","title":"Installation"},{"location":"install/#marketplace","text":"The plugin is in JetBrains repository ( Poetry Plugin Page ) You can install the stable version on PyCharm's Marketplace (Preference -> Plugins -> Marketplace) Official Document","title":"MarketPlace"},{"location":"install/#complied-binary","text":"The releases section of this repository contains a compiled version of the plugin: poetry-pycharm-plugin.zip(latest) After downloading this file, you can install the plugin from disk by following the JetBrains instructions here .","title":"Complied binary"},{"location":"install/#source","text":"Alternatively, you can clone this repository and follow the instructions under the \"Building the plugin\" heading below to build from source. The build process will create the file build/distributions/poetry-pycharm-plugin.zip . This file can be installed as a PyCharm plugin from disk following the same instructions.","title":"Source"}]}